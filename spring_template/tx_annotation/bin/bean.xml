<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
	<!-- 配置spring创建容器时需要扫描的包 -->
	<context:component-scan base-package="com.danhuang"></context:component-scan>
	<!-- 配置jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置dataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/account"/>
		<property name="username" value="root"/>
		<property name="password" value="123456"/>
	</bean>
	<!-- spring基于xml的和注解组合的配置 -->
	<!-- 第一步：配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 第二步：配置spring开启注解事务的支持 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- 在需要事务的地方使用@Transactional注解 
		该注解可以写在类上，方法上和接口上
		写在接口上表示该接口的所有实现类都有事务
		写在类上表示该类中所有方法都有事务
		写在方法上表示该方法有事务
		优先级：就近原则，谁的方法近，谁的优先级高
	-->
	
</beans>