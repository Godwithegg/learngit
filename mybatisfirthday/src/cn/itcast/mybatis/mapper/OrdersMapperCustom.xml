<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间为mapper的接口地址 
	mapper.java中的方法名和mapper.xml中的statement的id一致
	mapper.java中接口的参数类型和mapper.xml中parameterType的类型一致
	mapper.java中接口的返回类型和mapper.xml中resultType的类型一致
-->

<mapper namespace="cn.itcast.mybatis.mapper.OrdersMapperCustom">
	<!-- 订单查询关联用户的resultmap 
		将整个查询结果映射到orders中
	-->
	<resultMap type="cn.itcast.mybatis.po.Orders" id="OrdersUserResultMap">
		<!-- id:指定查询列中的唯一标识，如果有多个列组成唯一标识，需要配置多个id -->
		<!-- column:订单信息中唯一标识的列
			property:订单信息中唯一标识的列映射到哪个属性中
		 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
	<!-- 配置映射的关联的用户信息 -->
		<!-- association:用于映射关联查询单个对象的信息 -->
		<association property="user" javaType="cn.itcast.mybatis.po.User">
			<!-- id:关联查询用户的唯一标识 -->
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
	
	<!-- 订单及订单明细的resultmap -->
	<resultMap type="cn.itcast.mybatis.po.Orders" id="OrderDetailResultMap" extends="OrdersUserResultMap">
		<!-- 订单信息 -->
		<!-- 用户信息 -->
		<!-- 使用继承配置 -->
		
		<!-- 订单明细,多联系用collection -->
		<collection property="orderdetails" ofType="cn.itcast.mybatis.po.Orderdetail">
		<!-- id:订单唯一标识 -->
			<id column="orderdetail_id" property="id"/>
			<result column="items_id" property="itemsId"/>
			<result column="items_num" property="itemsNum"/>
			<result column="orders_id" property="itemsId"/>
		</collection>
		
	</resultMap>
	
	<!-- 查询用户及购买的商品 -->
	<resultMap type="cn.itcast.mybatis.po.User" id="UserAdnItemsResultMap">
		<!-- 用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="address" property="address"/>
		
		<!-- 订单信息,一个用户对应多个订单 -->
		<collection property="ordersList" ofType="cn.itcast.mybatis.po.Orders">
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			
	<!-- 订单明细，一个订单对应多个明细 -->
			<collection property="orderdetails" ofType="cn.itcast.mybatis.po.Orderdetail">
				<id column="orderdetail_id" property="id"/>
				<result column="items_id" property="itemsId"/>
				<result column="items_num" property="itemsNum"/>
				<result column="orders_id" property="itemsId"/>
				<association property="items" javaType="cn.itcast.mybatis.po.Items">
					<id column="items_id" property="id"/>
					<result column="items_name" property="name"/>
					<result column="items_detail" property="detail"/>
					<result column="items_price" property="price"/> 
				</association>
		
			</collection>
		
		</collection>
		
	</resultMap>
	
	
	<!-- 查询订单关联查询用户信息，使用resulttype -->
	<select id="findOrdersUser"  resultType="cn.itcast.mybatis.po.OrdersCustom">
		select orders.* ,user.username,user.sex,USER.address
		from orders,USER
		where orders.user_id=USER.id
	</select>
	<!-- 查询订单关联查询用户信息，使用resultmap -->
	<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
		select orders.* ,user.username,user.sex,USER.address
		from orders,USER
		where orders.user_id=USER.id
	</select>
	<!-- 查询订单关联用户及订单明细,使用resultmap -->
	<select id="findOrdersAndOrderDetailResultMap" resultMap="OrderDetailResultMap">
		select orders.*,user.username,user.sex,user.address,
			orderdetail.id orderdetail_id,orderdetail.items_id,orderdetail.items_num,orderdetail.orders_id
		from orders,user,orderdetail
		where orders.user_id=user.id and orderdetail.orders_id=orders.id
	</select>
	<!-- 查询用户及购买的商品信息，使用resultmap -->
	<select id="findUserAdnItemsResultMap" resultMap="UserAdnItemsResultMap">
		select orders.*,user.username,user.sex,user.address,
			orderdetail.id orderdetail_id,orderdetail.items_id,orderdetail.items_num,
			orderdetail.orders_id,items.name items_name,items.detail items_detail,items.price items_price
		from orders,user,orderdetail,items
		where orders.user_id = user.id and orderdetail.orders_id=orders.id and orderdetail.items_id = items.id
	</select>
	
	<!-- 延迟加载的resultmap -->
	<resultMap type="cn.itcast.mybatis.po.Orders" id="OrdersUserLazyLoadingResultMap">
		<!-- 对订单信息进行映射配置 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 实现对用户信息的延迟加载 
			select:指定延迟加载所需要执行的statement的id（是根据user_id查询用户信息的statement）
			要使用usermapper.xml中findUserById完成根据用户id（user_id）用户信息的查询，如果findUserById不在本mapper命名空间，需要在前面加namespace
			column：订单的信息中关联用户信息查询的列，是user_id
			关联查询的sql理解为(select username from user where orders.user_id  = user.id)username,
			(select sex from user where orders.user_id = user.id)sex
			from orders
		-->
			<association property="user" javaType="cn.itcast.mybatis.po.User" select="cn.itcast.mybatis.mapper.UserMapper.findUserById" column="user_id">
				
			</association>
	</resultMap>
	
	<!-- 查询订单关联查询用户，用户信息延迟加载 -->
	<select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
		select * from orders
	</select>
</mapper>